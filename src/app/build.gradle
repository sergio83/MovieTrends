apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def appName = "Movies"
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0000 // bump for dogfood builds, public betas, etc.

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.billboard.movies"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 1000000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            keyAlias "alias"
            keyPassword "123456"
            storeFile file("$rootDir/keystore.jks")
            storePassword "123456"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
        }

        release {
            minifyEnabled true
            debuggable false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            versionNameSuffix "-dev"
            manifestPlaceholders = [appName: "${appName}$versionNameSuffix"]
            buildConfigField 'String', 'HOST', '"https://api.themoviedb.org"'
            buildConfigField 'String', 'IMAGE_HOST', '"https://image.tmdb.org"'
            buildConfigField 'String', 'API_KEY', '""'
            buildConfigField 'String', 'YOUTUBE_API_KEY', '""'
        }
        prod {
            manifestPlaceholders = [appName: "${appName}"]
            buildConfigField 'String', 'HOST', '"https://api.themoviedb.org"'
            buildConfigField 'String', 'IMAGE_HOST', '"https://image.tmdb.org"'
            buildConfigField 'String', 'API_KEY', '""'
            buildConfigField 'String', 'YOUTUBE_API_KEY', '""'
        }

    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}.apk"
        }
    }

    allprojects {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Base: https://developer.android.com/jetpack/androidx/migrate
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation 'com.google.android.material:material:1.1.0-alpha01'
    implementation "androidx.annotation:annotation:1.0.1"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.percentlayout:percentlayout:1.0.0"
    implementation "androidx.palette:palette:1.0.0"

    // Testing
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    // Debug WebServices: http://facebook.github.io/stetho/
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // Debug Database: https://github.com/amitshekhariitbhu/Android-Debug-Database
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'
    debugImplementation 'androidx.arch.core:core-testing:2.0.0'

    // Logger: https://github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Image Management Library: https://frescolib.org/
    implementation 'com.facebook.fresco:fresco:1.11.0'

    // Retrofit: http://square.github.io/retrofit/
    def retrofit_version = "2.5.0"
    def okHttp_version = "3.12.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"

    // Dagger: https://github.com/google/dagger Version 2.19 mot work on kotlin
    def daggerVer = "2.16"
    implementation "com.google.dagger:dagger:$daggerVer"
    implementation "com.google.dagger:dagger-android-support:$daggerVer"
    implementation "com.google.dagger:dagger-android:$daggerVer"/**/
    kapt "com.google.dagger:dagger-compiler:$daggerVer"
    kapt "com.google.dagger:dagger-android-processor:$daggerVer"

    // LiveData + ViewModel : https://developer.android.com/topic/libraries/architecture/adding-components
    def lifecycle_version = "2.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Room: https://developer.android.com/topic/libraries/architecture/adding-components
    def room_version = "2.1.0-alpha03"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // WorkManager: https://developer.android.com/topic/libraries/architecture/adding-components
//    def work_version = "1.0.0-alpha11"
//    implementation "android.arch.work:work-runtime-ktx:$work_version" // use -ktx for Kotlin

    implementation files('libs/YouTubeAndroidPlayerApi.jar')

}
